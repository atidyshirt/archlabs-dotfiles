#!/bin/bash

#### MONITORS ####
bspc monitor -d 1 2 3 4 5

external_monitor=$(xrandr --query | grep 'HDMI-2')

if [[ $external_monitor = HDMI-2\ connected* ]]; then
    xrandr --output eDP-1 --primary --mode 2560x1440 --rotate normal --output HDMI-2 --mode 1920x1080 --rotate normal --above eDP-1
	bspc monitor HDMI-2 -d 1 2 3 4
	bspc monitor eDP-1 -d 5 6 7 8
else
	xrandr --output eDP-1 --auto
	bspc monitor eDP-1 -d 1 2 3 4 5
fi

# Truncate a couple of common commands that are used herein.
_bc() {
	bspc config "$@"
}

bspc config pointer_action1 move
bspc config pointer_action2 resize_side
bspc config pointer_action2 resize_corner

#### BSPWM configuration ####
_bc window_gap 			  						0
_bc top_padding 									25
_bc border_width 								  12
_bc right_padding                 0
_bc single_monocle                false
_bc click_to_focus                false
_bc split_ratio                   0.49
_bc borderless_monocle            true
_bc gapless_monocle               true
_bc paddingless_monocle  	  			false
_bc focus_follows_pointer         true
_bc remove_disabled_monitors      true
_bc merge_overlapping_monitors    true
_bc pointer_follows_monitor 			true
_bc pointer_modifier mod4
_bc pointer_action1 move
_bc pointer_action2 resize_side
_bc pointer_action3 resize_corner

# Rules
bspc rule -a feh state='floating'
bspc rule -a tint2 state='floating' follow=on
bspc rule -a mpv sticky=on state='floating'
bspc rule -a firefox:Toolkit sticky=on state=floating
bspc rule -a Zathura state='tiled'
bspc rule -a *:SPLASH state=floating
bspc desktop 5 -l monocle # desktop five starts in molocule
bspc desktop -f 1
# INIT-DAEMONS
sxhkd &
picom --experimental-backends &
dunst &
tint2 &
setxkbmap -option caps:esc
~/.config/bspwm/autostart &

# Colors
bspc config active_border_color "#262626"
bspc config focused_border_color "#262626"
bspc config normal_border_color "#262626"
bspc config presel_feedback_color "#62554A"


outer='0x262626'   # outer
inner1='0x62554A'  # focused
inner2='0x32302f'  # normal

targets() {
	case $1 in
		focused) bspc query -N -n .local.focused.\!fullscreen;;
		normal)  bspc query -N -n .local.\!focused.\!fullscreen;;
		active) bspc query -N -n .active.\!focused.\!fullscreen
	esac
}

draw() { chwb2 -I "$i" -O "$o" -i "2" -o "10" $@ 2> /dev/null; }

# initial draw, and then subscribe to events
{ echo; bspc subscribe node_geometry node_focus; } |
	while read -r _; do
		i=$inner1 o=$outer draw "$(targets focused)"
		i=$inner2 o=$outer draw "$(targets  normal)"
		i=$inner2 o=$outer draw "$(targets  active)"
	done
